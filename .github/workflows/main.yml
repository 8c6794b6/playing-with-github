name: main

on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - '**'
    tags:
      - '!**'

defaults:
  run:
    shell: bash

jobs:
  hello_world_job:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    name: A job to say hello
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Hello world action step
        uses: ./
        id: hello
        with:
          who-to-greet: 'Mona the Octocat'

      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"

      - name: Write the output time to file
        run: |
          mkdir times
          echo "${{ steps.hello.outputs.time }}" > times/${{ matrix.os }}.txt

      - name: Upload the file containing time output
        uses: actions/upload-artifact@v4
        with:
          name: time-output-${{ matrix.os }}
          path: times/${{ matrix.os }}.txt

  via_github:
    runs-on: ubuntu-latest
    name: Using root action by repository name
    steps:
      - name: Hello world action
        uses: 8c6794b6/playing-with-github-actions@v1
        id: hello
        with:
          who-to-greet: 'Foo Bar Buzz'

      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"

  composite01:
    runs-on: ubuntu-latest
    name: Running composite run steps action
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Hello world action
        uses: ./.github/actions/composite01
        id: hello
        with:
          who-to-greet: 'Quux'

      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"

  # ts01:
  #   runs-on: ubuntu-latest
  #   name: Running action made with TypeScript
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Hello world action
  #       uses: ./.github/actions/ts01
  #       id: hello
  #       with:
  #         who-to-greet: 'Blah'

  #     - name: Get the output time
  #       run: echo "The time was ${{ steps.hello.outputs.time }}"

  #     - name: Build all
  #       run: cd .github/actions/ts01 && yarn && yarn clean && yarn all

  # ps01:
  #   name: Running action made with PureScript
  #   strategy:
  #     matrix:
  #       os:
  #         - ubuntu-latest
  #         - macos-latest
  #         - windows-latest
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Hello world action
  #       uses: ./.github/actions/ps01
  #       id: hello
  #       with:
  #         who-to-greet: "Pizza"

  #     - name: Get the output time
  #       run: echo "The time was ${{ steps.hello.outputs.time }}"

  #     - name: Build all
  #       run: cd .github/actions/ps01 && yarn && yarn clean && yarn all

  cabal-install:
    uses: ./.github/workflows/hs-hello.yml
    with:
      foo: foo foo foo

  build-hs-static:
    name: Build static executable from Haskell Cabal package
    runs-on: ubuntu-latest
    needs:
      - cabal-install
    container:
      image: fossa/haskell-static-alpine:ghc-9.4.7
      ports:
        - 80
      options: --cpus 1
    steps:
      - name: Show versions
        run: |
          ghc --version
          cabal --version

      - name: Checkout
        uses: actions/checkout@v4

      - name: Update cabal package index
        run: cabal update

      - name: Run cabal configure
        run: cabal configure --enable-executable-static

      - name: Show cabal.project.local
        run: cat cabal.project.local

      - name: Run cabal build
        run: cabal build hs-hello

      - name: Copy the executable
        run: mkdir ./bin && cp -v $(cabal list-bin hs-hello) ./bin

      - name: Strip the executable
        run: strip -s ./bin/hs-hello

      - name: Run readelf
        run: readelf -d ./bin/hs-hello

      - name: Compress executable
        uses: svenstaro/upx-action@v2
        with:
          files: ./bin/hs-hello
          args: -9
          strip: false

      - name: Show the executable again
        run: ls -lh bin/hs-hello

  release:
    runs-on: ubuntu-latest
    name: Release on new tag
    needs:
      - hello_world_job
      - via_github
      - composite01
      - build-hs-static
      # - ts01
      # - ps01
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: time-output-ubuntu-latest
          path: times

      - name: Show downloaded artifacts
        run: ls -lh times

      - name: Make release
        if: startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v2
        id: rel
        with:
          draft: true
          prerelease: true
          body_path: changelogs/latest.txt
          files: |
            times/macos-latest.txt
            times/ubuntu-latest.txt
            times/windows-latest.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show released url
        if: startsWith(github.ref, 'refs/tags')
        run: echo ${{ steps.rel.outputs.url }}
